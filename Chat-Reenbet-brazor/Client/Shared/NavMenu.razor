@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider stateProvider
@inject IChatService chatService
@inject ILocalStorageService LocalStorage

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href=""><span class="oi oi-chat"></span>TheChat</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu" style="height:985px;overflow-y:scroll;">
    <p><span style="font-size: medium; color: white; padding: 20%; padding-top: 10%;">@(userLogin)</span></p>
    <ul class="nav flex-column"> 
        <li class="nav-item px-3">
            <AuthorizeView>
                <NotAuthorized>
                    <NavLink class="nav-link" href="login" >
                        <span class="oi oi-account-login" aria-hidden="true"></span> Log in
                    </NavLink>
                    <NavLink class="nav-link" href="registration" >
                        <span class="oi oi-pencil" aria-hidden="true"></span> Registration
                    </NavLink>
                </NotAuthorized>
                <Authorized>
                    <li class="nav-item px-3">
                        <a class="nav-link" @onclick="Logout" style="cursor:pointer">
                        <span class="oi oi-account-logout" aria-hidden="true" /> Logout
                    </a>
                    </li>
                    <li class="nav-item px-3">
                        <NavLink class="nav-link" href="newchat" >
                            <span class="oi oi-plus" aria-hidden="true"></span> New Chat
                        </NavLink>
                    </li>
                    
                    <hr/>

                    @if (userChats.Any())
                    {
                        @foreach (var item in userChats)
                        {
                        <li class="nav-item px-3" style=" "> 
                            <NavLink class="nav-link" href="@($"chatpage/{item.Id}")">
                            @if (@item.Type == ChatType.PrivateChat)
                            {
                                <span class="oi oi-person" aria-hidden="true"></span> @item.Name
                            }
                            else 
                            {
                                <span class="oi oi-people" aria-hidden="true"></span> @item.Name
                            }
                            
                            </NavLink>
                        </li>
                        
                        }
                    }
                    else
                    {
                        <p style="color: white; padding: 40px;">Loading chats...</p>
                    }
                    

                </Authorized>
            </AuthorizeView>
        @* </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink> *@
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    private string userLogin;
    private List<ChatNav> userChats = new List<ChatNav>();

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async void Logout()
    {
        await LocalStorage.RemoveItemAsync("user_login");
        await stateProvider.GetAuthenticationStateAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        string currentUser = await LocalStorage.GetItemAsStringAsync("user_login");

        currentUser = currentUser.Trim('"');
        System.Console.WriteLine(currentUser);

        userChats = await chatService.GetAllUserChats(currentUser);
        System.Console.WriteLine("GotAllChats");

        userLogin = await LocalStorage.GetItemAsStringAsync("user_login");
        userLogin = userLogin.Trim('"');
    } 
}


